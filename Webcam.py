{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#V1 WEBCAM\n",
    "import cv2\n",
    "\n",
    "cv2.namedWindow(\"preview\")\n",
    "# Webcam parameters (your desired resolution)\n",
    "w = 480\n",
    "h = 640\n",
    "vc = cv2.VideoCapture(0)\n",
    "vc.set(cv2.CAP_PROP_FRAME_WIDTH, w)\n",
    "vc.set(cv2.CAP_PROP_FRAME_HEIGHT, h)\n",
    "camWidth = vc.get(cv2.CAP_PROP_FRAME_WIDTH)\n",
    "camHeight = vc.get(cv2.CAP_PROP_FRAME_HEIGHT)\n",
    "\n",
    "if vc.isOpened(): # try to get the first frame\n",
    "    rval, frame = vc.read()\n",
    "    \n",
    "else:\n",
    "    rval = False\n",
    "\n",
    "x,y=220,220\n",
    "while rval:\n",
    "    x0,x1,y0,y1=10,15,10,15\n",
    "    cv2.circle(frame,(x, y), 5, (0,255,0), -1)\n",
    "    cv2.putText(frame, str(frame[x,y]), (x+10, y+10), cv2.FONT_HERSHEY_SIMPLEX, 1.0, (255, 255, 255))\n",
    "    cv2.imshow(\"preview\", frame)\n",
    "    rval, frame = vc.read()\n",
    "    key = cv2.waitKey(20)\n",
    "    if key == 27: # exit on ESC\n",
    "        break\n",
    "cv2.destroyWindow(\"preview\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5\n",
      "5\n",
      "5\n",
      "4\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "4\n",
      "4\n",
      "4\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "2\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "4\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "4\n",
      "4\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "4\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "4\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n",
      "4\n",
      "5\n",
      "5\n",
      "5\n",
      "5\n"
     ]
    }
   ],
   "source": [
    "#V2 WEBCAM+SCAN\n",
    "import cv2,numpy as np\n",
    "cv2.namedWindow(\"preview\")\n",
    "h = 480\n",
    "w = 640\n",
    "vc = cv2.VideoCapture(0)\n",
    "vc.set(cv2.CAP_PROP_FRAME_WIDTH, w)\n",
    "vc.set(cv2.CAP_PROP_FRAME_HEIGHT, h)\n",
    "\n",
    "if vc.isOpened(): # coba dapat gambar pertama kali\n",
    "    rval, frame = vc.read()\n",
    "else:\n",
    "    rval = False  \n",
    "\n",
    "def cek(hue):\n",
    "    r,g,b,y,p=[range(0,13),range(100,143),range(203,241),range(51,60),range(268,279)]\n",
    "    if hue in r: \n",
    "        #nada1\n",
    "        print('1')\n",
    "    elif hue in g: \n",
    "        #nada2\n",
    "        print('2')\n",
    "    elif hue in b: \n",
    "        #nada3\n",
    "        print('3')\n",
    "    elif hue in y: \n",
    "        #nada4\n",
    "        print('4')\n",
    "    else:\n",
    "        #nada5\n",
    "        print('5')\n",
    "    return\n",
    "i=0\n",
    "while rval:\n",
    "    i = i if i<w else 0\n",
    "    frame=cv2.flip(frame,1)\n",
    "    hsv=cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)\n",
    "    x0,x1,y0,y1=i,i,int(h/2)+50,int(h/2)-50\n",
    "    warna=int(np.average(hsv[y1:y0,x0:x1+5,0]))\n",
    "    cek(warna)\n",
    "    cv2.putText(frame,str(['hue',warna]),(50,400), cv2.FONT_HERSHEY_SIMPLEX, 1,(255,255,255),2,cv2.LINE_AA)\n",
    "    cv2.line(frame,(x0, y0),(x1, y1),(0,255,0),2)#(x1.y1)(x2.y2)=(bawah)(atas)\n",
    "    cv2.rectangle(frame,(0, y0),(w, y1),(255,0,0),3)##(x1.y1)(x2.y2)=(pojok kiri bawah)(pojok kanan atas)\n",
    "    cv2.imshow(\"preview\", frame)\n",
    "    rval, frame = vc.read()\n",
    "    key = cv2.waitKey(20)\n",
    "    i+=5\n",
    "    if key == 27: # tekan ESC untuk keluar \n",
    "        #rval = False\n",
    "        break\n",
    "cv2.destroyWindow(\"preview\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#V3 WEBCAM+SCAN+GUI\n",
    "import cv2,numpy as np\n",
    "cv2.namedWindow(\"preview\")\n",
    "h = 480\n",
    "w = 640\n",
    "vc = cv2.VideoCapture(0)\n",
    "vc.set(cv2.CAP_PROP_FRAME_WIDTH, w)\n",
    "vc.set(cv2.CAP_PROP_FRAME_HEIGHT, h)\n",
    "\n",
    "if vc.isOpened(): # coba dapat gambar pertama kali\n",
    "    rval, frame = vc.read()\n",
    "else:\n",
    "    rval = False  \n",
    "\n",
    "def play(listNada,hue):\n",
    "    #N=[range(0,13),range(100,143),range(203,241),range(51,60),range(268,279)]\n",
    "    if hue in listNada[0]: \n",
    "        #nada1\n",
    "        print('1')\n",
    "    elif hue in listNada[1]: \n",
    "        #nada2\n",
    "        print('2')\n",
    "    elif hue in listNada[2]: \n",
    "        #nada3\n",
    "        print('3')\n",
    "    elif hue in listNada[3]: \n",
    "        #nada4\n",
    "        print('4')\n",
    "    else:\n",
    "        #nada5\n",
    "        print('5')\n",
    "    return\n",
    "\n",
    "def trackInit():\n",
    "    def nothing(x):\n",
    "        pass\n",
    "    img = np.zeros((300,512,3), np.uint8)\n",
    "    cv2.namedWindow('image')\n",
    "    # NADA 1\n",
    "    cv2.createTrackbar('Nada 1 LOW','image',0,179,nothing)\n",
    "    cv2.createTrackbar('Nada 1 HIGH','image',0,179,nothing)\n",
    "    # NADA 2\n",
    "    cv2.createTrackbar('Nada 2 LOW','image',0,179,nothing)\n",
    "    cv2.createTrackbar('Nada 2 HIGH','image',0,179,nothing)\n",
    "    # NADA 3\n",
    "    cv2.createTrackbar('Nada 3 LOW','image',0,179,nothing)\n",
    "    cv2.createTrackbar('Nada 3 HIGH','image',0,179,nothing)\n",
    "    # NADA 4\n",
    "    cv2.createTrackbar('Nada 4 LOW','image',0,179,nothing)\n",
    "    cv2.createTrackbar('Nada 4 HIGH','image',0,179,nothing)\n",
    "    # NADA 5\n",
    "    cv2.createTrackbar('Nada 5 LOW','image',0,179,nothing)\n",
    "    cv2.createTrackbar('Nada 5 HIGH','image',0,179,nothing)\n",
    "    cv2.imshow('image',img)\n",
    "def track():\n",
    "    # POSISI TRACKBAR\n",
    "    #NADA 1\n",
    "    n1l = cv2.getTrackbarPos('Nada 1 LOW','image')\n",
    "    n1h = cv2.getTrackbarPos('Nada 1 HIGH','image')\n",
    "    #NADA 2\n",
    "    n2l = cv2.getTrackbarPos('Nada 2 LOW','image')\n",
    "    n2h = cv2.getTrackbarPos('Nada 2 HIGH','image')\n",
    "    #NADA 3\n",
    "    n3l = cv2.getTrackbarPos('Nada 3 LOW','image')\n",
    "    n3h = cv2.getTrackbarPos('Nada 3 HIGH','image')\n",
    "    #NADA 4\n",
    "    n4l = cv2.getTrackbarPos('Nada 4 LOW','image')\n",
    "    n4h = cv2.getTrackbarPos('Nada 5 HIGH','image')\n",
    "    #NADA 5\n",
    "    n5l = cv2.getTrackbarPos('Nada 5 LOW','image')\n",
    "    n5h = cv2.getTrackbarPos('Nada 5 HIGH','image')\n",
    "    return([range(n1l,n1h),range(n2l,n2h),range(n3l,n3h),range(n4l,n4h),range(n5l,n5h)])\n",
    "    \n",
    "i=0\n",
    "trackInit()\n",
    "while rval:\n",
    "    i = i if i<w else 0\n",
    "    frame=cv2.flip(frame,1)\n",
    "    hsv=cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)\n",
    "    x0,x1,y0,y1=i,i,int(h/2)+50,int(h/2)-50\n",
    "    warna=int(np.average(hsv[y1:y0,x0:x1+5,0]))\n",
    "    #play(track(),warna)\n",
    "    track()\n",
    "    cv2.putText(frame,str(['hue',warna]),(50,400), cv2.FONT_HERSHEY_SIMPLEX, 1,(255,255,255),2,cv2.LINE_AA)\n",
    "    cv2.line(frame,(x0, y0),(x1, y1),(0,255,0),2)#(x1.y1)(x2.y2)=(bawah)(atas)\n",
    "    cv2.rectangle(frame,(0, y0),(w, y1),(255,0,0),3)##(x1.y1)(x2.y2)=(pojok kiri bawah)(pojok kanan atas)\n",
    "    cv2.imshow(\"preview\", frame)\n",
    "    rval, frame = vc.read()\n",
    "    key = cv2.waitKey(20)\n",
    "    i+=5\n",
    "    if key == 27: # tekan ESC untuk keluar \n",
    "        #rval = False\n",
    "        break\n",
    "cv2.destroyWindow(\"preview\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#V4 WEBCAM+SCAN+ARDUINO\n",
    "import cv2,numpy as np, serial, time\n",
    "cv2.namedWindow(\"preview\")\n",
    "h = 480\n",
    "w = 640\n",
    "vc = cv2.VideoCapture(0)\n",
    "vc.set(cv2.CAP_PROP_FRAME_WIDTH, w)\n",
    "vc.set(cv2.CAP_PROP_FRAME_HEIGHT, h)\n",
    "\n",
    "if vc.isOpened(): # coba dapat gambar pertama kali\n",
    "    rval, frame = vc.read()\n",
    "else:\n",
    "    rval = False  \n",
    "\n",
    "def play(warna):\n",
    "    ino=serial.Serial('/dev/ttyUSB1',57600)\n",
    "    r,g,b,y,p=[range(0,13),range(100,143),range(203,241),range(51,60),range(268,279)]\n",
    "    N=[262,294,330,349,392]\n",
    "    if warna in r: \n",
    "        ino.write(N[0])#nada1\n",
    "        time.sleep(1.5)\n",
    "    elif warna in g: \n",
    "        ino.write(N[1])#nada2\n",
    "        time.sleep(1.5)\n",
    "    elif warna in b: \n",
    "        ino.write(N[2])#nada3\n",
    "        time.sleep(1.5)\n",
    "    elif warna in y: \n",
    "        ino.write(N[3])#nada4\n",
    "        time.sleep(1.5)\n",
    "    else:\n",
    "        ino.write(N[4])#nada5\n",
    "        time.sleep(1.5)\n",
    "    return   \n",
    "\n",
    "while rval:\n",
    "    i = i if i<w else 0\n",
    "    frame=cv2.flip(frame,1)\n",
    "    hsv=cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)\n",
    "    x0,x1,y0,y1=i,i,int(h/2)+50,int(h/2)-50\n",
    "    warna=int(np.average(hsv[y1:y0,x0:x1+5,0]))\n",
    "    play(warna)\n",
    "    cv2.putText(frame,str(warna),(50,400), cv2.FONT_HERSHEY_SIMPLEX, 1,(255,255,255),2,cv2.LINE_AA)\n",
    "    cv2.line(frame,(x0, y0),(x1, y1),(0,255,0),2)#(x1.y1)(x2.y2)=(bawah)(atas)\n",
    "    cv2.rectangle(frame,(0, y0),(w, y1),(255,0,0),3)##(x1.y1)(x2.y2)=(pojok kiri bawah)(pojok kanan atas)\n",
    "    cv2.imshow(\"preview\", frame)\n",
    "    rval, frame = vc.read()\n",
    "    key = cv2.waitKey(20)\n",
    "    i+=5\n",
    "    if key == 27: # tekan ESC untuk keluar \n",
    "        break\n",
    "cv2.destroyWindow(\"preview\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#V5 WEBCAM+SCAN+GUI+ARDUINO\n",
    "import cv2,numpy as np, serial, time\n",
    "cv2.namedWindow(\"preview\")\n",
    "h = 480\n",
    "w = 640\n",
    "vc = cv2.VideoCapture(0)\n",
    "vc.set(cv2.CAP_PROP_FRAME_WIDTH, w)\n",
    "vc.set(cv2.CAP_PROP_FRAME_HEIGHT, h)\n",
    "\n",
    "if vc.isOpened(): # coba dapat gambar pertama kali\n",
    "    rval, frame = vc.read()\n",
    "else:\n",
    "    rval = False  \n",
    "\n",
    "def play(listNada,warna):\n",
    "    ino=serial.Serial('/dev/ttyUSB1',57600)\n",
    "    #r,g,b,y,p=[range(0,13),range(100,143),range(203,241),range(51,60),range(268,279)]\n",
    "    N=[262,294,330,349,392]\n",
    "    if warna in listNada[0]: \n",
    "        ino.write(N[0])#nada1\n",
    "        time.sleep(1.5)\n",
    "    elif warna in listNada[1]: \n",
    "        ino.write(N[1])#nada2\n",
    "        time.sleep(1.5)\n",
    "    elif warna in listNada[2]: \n",
    "        ino.write(N[2])#nada3\n",
    "        time.sleep(1.5)\n",
    "    elif warna in listNada[3]: \n",
    "        ino.write(N[3])#nada4\n",
    "        time.sleep(1.5)\n",
    "    else:\n",
    "        ino.write(N[4])#nada5\n",
    "        time.sleep(1.5)\n",
    "    return      \n",
    "\n",
    "def trackInit():#INISIALISASI TRACK\n",
    "    def nothing(x):\n",
    "        pass\n",
    "    img = np.zeros((300,512,3), np.uint8)\n",
    "    cv2.namedWindow('image')\n",
    "    # NADA 1\n",
    "    cv2.createTrackbar('Nada 1 LOW','image',0,179,nothing)\n",
    "    cv2.createTrackbar('Nada 1 HIGH','image',0,179,nothing)\n",
    "    # NADA 2\n",
    "    cv2.createTrackbar('Nada 2 LOW','image',0,179,nothing)\n",
    "    cv2.createTrackbar('Nada 2 HIGH','image',0,179,nothing)\n",
    "    # NADA 3\n",
    "    cv2.createTrackbar('Nada 3 LOW','image',0,179,nothing)\n",
    "    cv2.createTrackbar('Nada 3 HIGH','image',0,179,nothing)\n",
    "    # NADA 4\n",
    "    cv2.createTrackbar('Nada 4 LOW','image',0,179,nothing)\n",
    "    cv2.createTrackbar('Nada 4 HIGH','image',0,179,nothing)\n",
    "    # NADA 5\n",
    "    cv2.createTrackbar('Nada 5 LOW','image',0,179,nothing)\n",
    "    cv2.createTrackbar('Nada 5 HIGH','image',0,179,nothing)\n",
    "    cv2.imshow('image',img)\n",
    "def track():#CEK POSISI TRACK\n",
    "    # POSISI TRACKBAR\n",
    "    #NADA 1\n",
    "    n1l = cv2.getTrackbarPos('Nada 1 LOW','image')\n",
    "    n1h = cv2.getTrackbarPos('Nada 1 HIGH','image')\n",
    "    #NADA 2\n",
    "    n2l = cv2.getTrackbarPos('Nada 2 LOW','image')\n",
    "    n2h = cv2.getTrackbarPos('Nada 2 HIGH','image')\n",
    "    #NADA 3\n",
    "    n3l = cv2.getTrackbarPos('Nada 3 LOW','image')\n",
    "    n3h = cv2.getTrackbarPos('Nada 3 HIGH','image')\n",
    "    #NADA 4\n",
    "    n4l = cv2.getTrackbarPos('Nada 4 LOW','image')\n",
    "    n4h = cv2.getTrackbarPos('Nada 5 HIGH','image')\n",
    "    #NADA 5\n",
    "    n5l = cv2.getTrackbarPos('Nada 5 LOW','image')\n",
    "    n5h = cv2.getTrackbarPos('Nada 5 HIGH','image')\n",
    "    return([range(n1l,n1h),range(n2l,n2h),range(n3l,n3h),range(n4l,n4h),range(n5l,n5h)])\n",
    "    \n",
    "i=0\n",
    "trackInit()\n",
    "while rval:\n",
    "    i = i if i<w else 0\n",
    "    frame=cv2.flip(frame,1)\n",
    "    hsv=cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)\n",
    "    x0,x1,y0,y1=i,i,int(h/2)+50,int(h/2)-50\n",
    "    warna=int(np.average(hsv[y1:y0,x0:x1+5,0]))\n",
    "    play(track(),warna)\n",
    "    cv2.putText(frame,str(warna),(50,400), cv2.FONT_HERSHEY_SIMPLEX, 1,(255,255,255),2,cv2.LINE_AA)\n",
    "    cv2.line(frame,(x0, y0),(x1, y1),(0,255,0),2)#(x1.y1)(x2.y2)=(bawah)(atas)\n",
    "    cv2.rectangle(frame,(0, y0),(w, y1),(255,0,0),3)##(x1.y1)(x2.y2)=(pojok kiri bawah)(pojok kanan atas)\n",
    "    cv2.imshow(\"preview\", frame)\n",
    "    rval, frame = vc.read()\n",
    "    key = cv2.waitKey(20)\n",
    "    i+=5\n",
    "    if key == 27: # tekan ESC untuk keluar \n",
    "        #rval = False\n",
    "        break\n",
    "cv2.destroyWindow(\"preview\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
